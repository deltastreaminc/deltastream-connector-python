changesDir: .changes
unreleasedDir: unreleased
headerPath: header.tpl.md
versionHeaderPath: ""
changelogPath: CHANGELOG.md
versionExt: md
envPrefix: "CHANGIE_"
versionFormat: '## deltastream-connector {{.Version}} - {{.Time.Format "January 02, 2006"}}'
kindFormat: '### {{.Kind}}'
changeFormat: |-
  {{- $IssueList := list }}
  {{- if $.Custom.Issue }}
    {{- $changes := splitList " " (printf "%s" $.Custom.Issue) }}
    {{- if ne (len $changes) 0 }}
      {{- range $issueNbr := $changes }}
        {{- $changeLink := "[#nbr](https://github.com/deltastreaminc/deltastream-connector-python/issues/nbr)" | replace "nbr" $issueNbr }}
        {{- $IssueList = append $IssueList $changeLink }}
      {{- end }}
    - {{.Body}} ({{ range $index, $element := $IssueList }}{{if $index}}, {{end}}{{$element}}{{end}})
    {{- else }}
    - {{.Body}}
    {{- end }}
  {{- else }}
    - {{.Body}}
  {{- end }}

kinds:
  - label: Breaking Changes
    auto: major
  - label: Features
    auto: minor
  - label: Fixes
    auto: patch
  - label: Docs
    auto: patch
  - label: Under the Hood
    auto: patch
  - label: Dependencies
    auto: patch
  - label: Security
    auto: patch
  - label: Removed
    auto: major

newlines:
  afterChangelogHeader: 1
  afterKind: 1
  afterChangelogVersion: 1
  beforeKind: 1
  endOfVersion: 1

custom:
- key: Author
  label: GitHub Username(s) (separated by a single space if multiple)
  type: string
  minLength: 3
- key: Issue
  label: GitHub Issue Number (optional, separated by a single space if multiple)
  type: string
  minLength: 0

footerFormat: |
  {{- $contributorDict := dict }}
  {{- /* ensure we always skip snyk and dependabot in addition to the core team */}}
  {{- $maintainers := list "dependabot[bot]" "snyk-bot"}}
  {{- range $change := .Changes }}
    {{- $authorList := splitList " " (printf "%s" $change.Custom.Author) }}
    {{- /* loop through all authors for a single changelog */}}
    {{- range $author := $authorList }}
      {{- $authorLower := lower $author }}
      {{- /* we only want to include non-core team contributors */}}
      {{- if not (has $authorLower $maintainers)}}
        {{- $IssueList := list }}
        {{- if $change.Custom.Issue }}
          {{- $changes := splitList " " (printf "%s" $change.Custom.Issue) }}
          {{- if ne (len $changes) 0 }}
            {{- range $issueNbr := $changes }}
              {{- $changeLink := "[#nbr](https://github.com/deltastreaminc/deltastream-connector-python/issues/nbr)" | replace "nbr" $issueNbr }}
              {{- $IssueList = append $IssueList $changeLink }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- /* check if this contributor has other changes associated with them already */}}
        {{- if hasKey $contributorDict $author }}
          {{- $contributionList := get $contributorDict $author }}
          {{- $contributionList = concat $contributionList $IssueList }}
          {{- $contributorDict = set $contributorDict $author $contributionList }}
        {{- else }}
          {{- $contributionList := $IssueList }}
          {{- $contributorDict = set $contributorDict $author $contributionList }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- /* no indentation here for formatting so the final markdown doesn't have unneeded indentations */}}
  {{- if $contributorDict}}
  ### Contributors
  {{- range $k,$v := $contributorDict }}
  - [@{{$k}}](https://github.com/{{$k}}){{ if $v }} ({{ range $index, $element := $v }}{{if $index}}, {{end}}{{$element}}{{end}}){{ end }}
  {{- end }}
  {{- end }}
