# coding: utf-8

"""
    DeltaStream Dataplane REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from deltastream.api.dataplane.openapi_client.models.result_set_columns_inner import ResultSetColumnsInner

class TestResultSetColumnsInner(unittest.TestCase):
    """ResultSetColumnsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResultSetColumnsInner:
        if include_optional:
            return ResultSetColumnsInner(
                name='column1',
                type='string',
                nullable=True
            )
        else:
            return ResultSetColumnsInner(
                name='column1',
                type='string',
                nullable=True
            )

    def testResultSetColumnsInner(self):
        """Test ResultSetColumnsInner basic functionality"""
        inst_req = self.make_instance(include_optional=False)
        self.assertEqual(inst_req.name, 'column1')
        self.assertEqual(inst_req.type, 'string')
        self.assertTrue(inst_req.nullable)

    def test_columns_inner_serialization(self):
        """Test ResultSetColumnsInner serialization/deserialization"""
        column = ResultSetColumnsInner(name='test_col', type='integer', nullable=False)
        json_str = column.to_json()
        column_from_json = ResultSetColumnsInner.from_json(json_str)
        self.assertEqual(column.name, column_from_json.name)
        self.assertEqual(column.type, column_from_json.type)
        self.assertEqual(column.nullable, column_from_json.nullable)

    def test_columns_inner_dict_conversion(self):
        """Test ResultSetColumnsInner to/from dict conversion"""
        column = ResultSetColumnsInner(name='dict_col', type='boolean', nullable=True)
        column_dict = column.to_dict()
        column_from_dict = ResultSetColumnsInner.from_dict(column_dict)
        self.assertEqual(column.name, column_from_dict.name)
        self.assertIsInstance(column_dict, dict)

    def test_columns_inner_validation(self):
        """Test ResultSetColumnsInner validation"""
        with self.assertRaises(ValueError):
            ResultSetColumnsInner(name=None, type='string', nullable=True)  # type: ignore
        
        with self.assertRaises(ValueError):
            ResultSetColumnsInner(name='col1', type=None, nullable=True)  # type: ignore

if __name__ == '__main__':
    unittest.main()
