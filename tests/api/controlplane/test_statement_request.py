# coding: utf-8

"""
DeltaStream REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from deltastream.api.controlplane.openapi_client.models.statement_request import (
    StatementRequest,
)
from deltastream.api.controlplane.openapi_client.models.statement_request_parameters import (
    StatementRequestParameters,
)


class TestStatementRequest(unittest.TestCase):
    """StatementRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StatementRequest:
        if include_optional:
            return StatementRequest(
                statement="SELECT * FROM table",
                organization="org1",
                role="admin",
                database="db1",
                var_schema="public",
                store="store1",
                parameters=StatementRequestParameters(
                    timezone="America/New_York", session_id=""
                ),
            )
        else:
            return StatementRequest(statement="SELECT * FROM table")

    def test_statement_request_required(self):
        instance = self.make_instance(include_optional=False)
        self.assertIsInstance(instance, StatementRequest)
        self.assertEqual(instance.statement, "SELECT * FROM table")
        self.assertIsNone(instance.organization)
        self.assertIsNone(instance.role)
        self.assertIsNone(instance.database)
        self.assertIsNone(instance.var_schema)
        self.assertIsNone(instance.store)
        self.assertIsNone(instance.parameters)

    def test_statement_request_optional(self):
        instance = self.make_instance(include_optional=True)
        self.assertIsInstance(instance, StatementRequest)
        self.assertEqual(instance.statement, "SELECT * FROM table")
        self.assertEqual(instance.organization, "org1")
        self.assertEqual(instance.role, "admin")
        self.assertEqual(instance.database, "db1")
        self.assertEqual(instance.var_schema, "public")
        self.assertEqual(instance.store, "store1")
        self.assertIsInstance(instance.parameters, StatementRequestParameters)
        self.assertEqual(instance.parameters.timezone, "America/New_York")
        self.assertEqual(instance.parameters.session_id, "")

    def test_to_from_json(self):
        instance = self.make_instance(include_optional=True)
        json_str = instance.to_json()
        new_instance = StatementRequest.from_json(json_str)
        self.assertEqual(instance, new_instance)


if __name__ == "__main__":
    unittest.main()
